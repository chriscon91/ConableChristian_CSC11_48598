/* 
   Christian Conable
   Assignment 4
   10/13/2014
*/

/* -- printf03.s */
.data

/* First Input */
.balign 4
message1: .asciz "Hey, Enter the denominator: "
/* Second Input */
.balign 4
message22: .asciz "Hey again, Enter the numerator: "

/* Output */
.balign 4
message2: .asciz "%d divide by 5 is %d\n"

/* Format pattern for first scanf */
.balign 4
scan_pattern : .asciz "%d"
/* Format pattern for second scanf */
.balign 4
scan_pattern2 : .asciz "%d"

/* Where first scanf will store the number read */
.balign 4
number_read: .word 0
/* Where second scanf will store the number read */
.balign 4
number_read2: .word 0

.balign 4
return: .word 0

.balign 4
return2: .word 0

.text

/*
divide_by_5 function
*/
divide_by_5:
    ldr r1, address_of_return2       /* r1 . &address_of_return */
    str lr, [r1]                     /* Store link register into the return addr$

    ldr r2, address_of_number_read
    ldr r2, [r2]                     /* Put denominator into r2 */
    ldr r3, address_of_number_read2
    ldr r3, [r3]                     /* Put numerator into r3 */
    mov r4, #1
    mov r5, r3
    mov r0, #0
    mov r1, r2
    cmp r1, r3
    ble _end

_shift1:
        lsl r4, r4, #1
        lsl r5, r5, #1
        cmp r1, r5
        bgt _shift1
_next:
        lsr r4, r4, #1
        lsr r5, r5, #1
_shift2:
        add r0, r0, r4
        sub r1, r1, r5
_shift3:
        lsr r4, r4, #1
        lsr r5, r5, #1
        cmp r1, r5
        blt _shift3
        cmp r4, #1
        bge _shift2

    ldr lr, address_of_return2       /* lr . &address_of_return */
    ldr lr, [lr]                     /* lr . *lr */
    bx lr                            /* return from main using lr */
address_of_return2 : .word return2

.global main
main:
    /* Begin Main */
    ldr r1, address_of_return
    str lr, [r1]

    /* Read in First message */
    ldr r0, address_of_message1
    bl printf
    /* Input Denominator */
    ldr r0, address_of_scan_pattern
    ldr r1, address_of_number_read
    bl scanf

    /* Read in second message */
    ldr r0, address_of_message22
    bl printf
    /* Input Numerator */
    ldr r0, address_of_scan_pattern2
    ldr r1, address_of_number_read2  
    bl scanf

    /* Branch input to divide function */
    ldr r0, address_of_number_read
    ldr r1, address_of_number_read2
    ldr r0, [r0]
    ldr r1, [r1]
    bl divide_by_5

    mov r2, r0
    ldr r1, address_of_number_read
    ldr r1, [r1]
    ldr r0, address_of_message2
    bl printf

    ldr lr, address_of_return
    ldr lr, [lr]
    bx lr
address_of_message1 : .word message1
address_of_message22 : .word message22
address_of_message2 : .word message2
address_of_scan_pattern : .word scan_pattern
address_of_scan_pattern2 : .word scan_pattern2
address_of_number_read : .word number_read
address_of_number_read2 : .word number_read2
address_of_return : .word return

/* External */
.global printf
.global scanf




